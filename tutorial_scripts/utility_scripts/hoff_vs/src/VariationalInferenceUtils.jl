module VariationalInferenceUtils

curr_dir = ENV["PWD"]
src_dir = "/hoff_vs/src/"
include(curr_dir*src_dir*"PlottingUtils.jl")
using .PlottingUtils
include(curr_dir*src_dir*"MathUtils.jl")
using .MathUtils
include(curr_dir*src_dir*"DataPreprocessingUtils.jl")
using .DataPreprocessingUtils
include(curr_dir*src_dir*"IOUtils.jl")
using .IOUtils
include(curr_dir*src_dir*"TidyUtils.jl")
using .TidyUtils
include(curr_dir*src_dir*"GeneUtils.jl")
using .GeneUtils

using Random
using Distributions
using Flux, Turing
using Turing.Variational
using Turing.RandomMeasures: stickbreak, DirichletProcess, StickBreakingProcess, ChineseRestaurantProcess
using StatsBase, StatsFuns, StatsModels, StatsPlots, Statistics,SpecialFunctions
using Test
import Debugger
using CSV,DataFrames
using JSON, JSON3
using Dates
using TSne, MultivariateStats, Clustering
using LaTeXStrings, TypedTables, PrettyTables
using Optim, LinearAlgebra
using Logging
using Optim, LinearAlgebra
using Hyperopt 
using OrderedCollections
using BenchmarkTools
using JLD2,FileIO
using HDF5
using StaticArrays
using ClusterValidityIndices
using Distributed
using Base.Threads

export  variational_inference,
        depracated_variational_inference_notusingXhat,
        variational_inference_HDP,
        variational_inference_dynamicHDP,
        tidy_variational_inference_dynamicHDP,
        tidy_variational_inference_dynamicHDP_SparseVS,
        tidy_variational_inference_dynamicHDP_VS1,
        tidy_variational_inference_dynamicHDP_VS2,

        variational_inference_dynamicHDP_vs25_fast3,
        variational_inference_dynamicHDP_vs25_fast3_mtall,
        variational_inference_dynamicHDP_vs25_fast3_mtbest,
        variational_inference_dynamicHDP_vs25_fast3_mtbest_sparserestart,
        variational_inference_dynamicHDP_vshoff,
        variational_inference_dynamicHDP_vshoff_perK,
        variational_inference_dynamicHDP_vshoff_mpu,
        variational_inference_dynamicHDP_vshoff_lowmem_mpu,
        variational_inference_dynamicHDP_vshoff2,
        local_updates_fast3!,
        local_updates_fast3_mtall!,
        local_updates_fast3_mtbest!,
        local_updates_fast3_mtbest_sparserestart!,
        global_cluster_updates_expectation!,
        global_cluster_updates_statistics!,
        global_cluster_updates_maximization!,
        global_cluster_updates_fast3!,
        global_cluster_updates_fast3_mtall!,
        global_cluster_updates_fast3_mtbest!,
        global_condition_updates_fast3!,
        global_condition_updates_fast3_mtall!,
        global_condition_updates_fast3_mtbest!,
        extract_cluster_paramter,
        extract_condition_paramter,
        extract_gene_paramter,
        extract_rtik_paramter,
        extract_elbo_vals_perK,
        extract_and_add_parameters_to_outputs_dict!,

        #Functions that calculate parts of the elbo
        calc_DataElbo,
        calc_Hz,
        calc_SurragateLowerBound_unconstrained,
        calc_SurragateLowerBound,
        calc_Hs,
        calc_wAllocationsLowerBound,
        calc_GammaElbo,
        calc_alphaElbo,
        calc_ImportanceElbo,
        calc_Hv,
        calc_DataElbo7,
        calc_DataElbo12,



        tidy_calc_Hz,
        tidy_calc_Hs,
        tidy_calc_Hxi,
        tidy_calc_SurragateLowerBound_unconstrained,
        tidy_calc_GammaElbo,
        tidy_calc_wAllocationsLowerBound,
        tidy_calc_alphaElbo,
        tidy_calc_DataElbo,
        tidy_calc_DataElbo_SparseVS,
        tidy_calc_DataElbo_VS1,
        tidy_calc_DataElbo_VS2,
        tidy_elbo_calc,
        tidy_elbo_calc_SparseVS,
        tidy_elbo_calc_VS1,
        tidy_elbo_calc_VS2,

        calc_DataElbo25_fast3,
        calc_Hz_fast3,
        calc_HyjkSurragateLowerBound_unconstrained,
        calc_wAllocationsLowerBound_fast3,
        calc_alphaElbo_fast3,
        calc_HsGammaAlphaElbo_fast3,
        calc_HsElbo,
        calculate_elbo,
        calculate_elbo_perK,
        calc_SurragateLowerBound_unconstrained_elbo,
        calc_DataElbo_perK,
        calculate_elbo_mpu,
        calc_DataElbo_mpu,

        #Math Util function
        c_Ga,
        c_Beta,

        #Variational Distribution Updates
        update_rtik,
        update_Ntk,
        update_θ_hat,
        update_Nk,
        update_N,
        update_xbar_k,
        update_sk,
        update_λ0k_hat,
        update_a0k_hat,
        update_mk_hat,
        update_b0k_hat,
        update_Tk,
        update_rho_omega_hat,
        update_x_hat_sq_k,
        update_x_hat_k,
        update_x_hat_error_vs_forloops,
        update_x_hatk_signal_vs_forloops,
        update_x_hat_sq_error_vs_forloops,
        update_x_hatk_sq_signal_vs_forloops, 
        update_a0k_hat_usingXhat,
        update_b0k_hat_usingXhat,
        update_mk_hat_usingXhat,

        update_c_ttprime,
        update_awt_hat,
        update_bwt_hat,
        update_αt,
        update_γ,
        update_Tαk,

        get_gene_PIP25_fast3,
        get_gene_PIP25_fast3!,
        get_gene_PIP25_fast3_mt!,
        accumulate_deviance_log_norm_pdf3!,
        _accumulate_deviance_log_norm_pdf3!,
        update_rtik!,
        update_rtik_mt!,
        update_rtik_mpu!,
        update_rtik_vs25_fast3!,
        update_rtik_vs25_fast3_mt!,
        update_Ntk!,
        update_Ntk_fast3!,
        update_Ntk_fast3_mt!,
        update_Ntk_mpu!,
        calculate_sparse_restart!,
        reset_Ntk_sparse_restart!,
        update_c_ttprime!,
        update_c_ttprime_mpu!,
        update_c_ttprime_fast3!,
        update_c_ttprime_fast3_mt!,
        update_d_hat!,
        update_d_hat_sum!,
        update_d_hat_mt!,
        update_d_hat_mpu!,
        update_d_hat_sum_mt!,
        update_d_hat_sum_mpu!,
        update_θ_hat_fast3!,
        update_θ_hat_fast3_mt!,
        update_θ_hat_sum_fast3!,
        update_θ_hat_sum_fast3_mt!,
        update_Nk!,
        update_Nk_mt!,
        update_Nk_mpu!,
        update_Nkj25_fast3!,
        update_Nkj25_fast3_mt!,
        update_x_hat_k25_fast3!,
        update_x_hat_k!,
        update_x_hat_k_mt!,
        update_x_hat_k_mpu!,
        update_x_hat_k25_fast3_mt!,
        update_x_hat_sq_k25_fast3!,
        update_x_hat_sq_k!,
        update_x_hat_sq_k_mt!,
        update_x_hat_sq_k_mpu!,
        update_x_hat_sq_k25_fast3_mt!,
        update_λ0k_hat_fast3!,
        update_λ0k_hat_fast3_mt!,
        update_a0k_hat_usingXhat25_fast3!,
        update_a0k_hat_usingXhat25_fast3_mt!,
        update_mk_hat_usingXhat_fast3!,
        update_mk_hat_usingXhat_fast3_mt!,
        update_b0k_hat_usingXhat_fast3!,
        update_b0k_hat_usingXhat_fast3_mt!,
        update_mk_hat!,
        update_mk_hat_mt!,
        update_mk_hat_mpu!,
        update_v_sq_k_hat!,
        update_v_sq_k_hat_mt!,
        update_v_sq_k_hat_mpu!,
        update_yjk!,
        update_yjk_mt!,
        update_yjk_mpu!,
        update_var_muk_hat!,
        update_var_muk_hat_mt!,
        update_var_muk_hat_mpu!,
        update_κk_hat!,
        update_κk_hat_mt!,
        update_κk_hat_mpu!,
        update_σ_sq_k_hat!,
        update_σ_sq_k_hat_mt!,
        update_σ_sq_k_hat_mpu!,
        update_λ_sq_k_hat!,
        update_λ_sq_k_hat_mt!,
        update_λ_sq_hat_mpu!,
        update_αt_fast3!,
        update_αt_fast3_mt!,
        update_abwt_hat_fast3!,
        update_abwt_hat_fast3_mt!,
        update_st_hat_fast3!,
        update_st_hat_fast3_mt!,
        update_st_hat_mpu!,
        update_γ_fast3,
        update_γ_fast3_mt,
        update_Tk_mt,
        update_Tk_mpu!,
        update_Tαk_fast3,
        update_Tαk_fast3_mt,
        update_rho_omega_hat_fast3!,
        update_gh_hat!,
        update_gh_hat_mpu!,
        update_ηk!,

        tidy_update_rtik,
        tidy_update_rtik_SparseVS,
        tidy_update_rtik_VS1,
        tidy_update_rtik_VS2,
        tidy_update_θ_hat,
        tidy_update_c_ttprime,
        tidy_update_Nk,
        tidy_update_Nkj,
        tidy_update_Nej,
        tidy_update_Ntk,
        tidy_update_x_hat_k,
        tidy_update_x_hat_e,
        tidy_update_x_hat_sq_k,
        tidy_update_x_hat_sq_e,
        tidy_update_λ0k_hat!,
        tidy_update_λ0_err_hat!,
        tidy_update_a0k_hat_usingXhat!,
        tidy_update_a0_err_hat_usingXhat!,
        tidy_update_mk_hat_usingXhat!,
        tidy_update_m_err_hat_usingXhat!,
        tidy_update_b0k_hat_usingXhat!,
        tidy_update_b0_err_hat_usingXhat!,
        tidy_update_ηtkj_SparseVS,
        tidy_update_ηtkj_VS,
        tidy_update_αt!,
        tidy_update_wtildet!,
        tidy_update_γ,
        tidy_update_Tαk,
        tidy_update_rho_omega_hat!,
        tidy_local_update,
        tidy_global_update,
        tidy_local_update_SparseVS,
        tidy_global_update_SparseVS,
        tidy_local_update_VS1,
        tidy_local_update_VS2,
        tidy_global_update_VS,

        #Expected value functions
        βk_expected_value,
        uk_expected_value,
        logUk_expected_value,
        log1minusUk_expected_value,
        log_π_expected_value,
        log_τ_kj_expected_value,
        log_τ_k_expected_value,
        τ_μ_expected_value,

        αt_expected_value,
        γ_expected_value,
        log_γ_expected_value,
        log_αt_expected_value,
        log_w_ttprime_expected_value,
        log_tilde_wt_expected_value,
        log_minus_tilde_wt_expected_value,

        log_τ_kj_error_expected_value,
        log_τ_k_error_expected_value,
        τ_μ_error_expected_value,

        adjust_e_log_π_tk3!,
        log_π_expected_value_fast3!,
        expectation_βk,
        recursive_minus_e_uk_cumprod,
        expectation_log_normal_l_j!,
        expectation_log_π_tk,
        expectation_log_tilde_wtt,
        expectation_log_minus_tilde_wtt,
        expectation_uk,
        expectation_αt,
        expectation_log_αt,
        expectation_logUk,
        expectation_log1minusUk,

        tidy_τ_μ_expected_value,
        tidy_log_τ_kj_expected_value,
        tidy_log_τj_err_expected_value,tidy_τ_μ_err_expected_value,
        tidy_log_π_expected_value,
        tidy_βk_expected_value,
        tidy_uk_expected_value,
        tidy_logUk_expected_value,
        tidy_log1minusUk_expected_value,
        tidy_γ_expected_value,
        tidy_log_γ_expected_value,
        tidy_αt_expected_value,
        tidy_log_αt_expected_value,
        tidy_log_tilde_wt_expected_value,
        tidy_log_minus_tilde_wt_expected_value,
        tidy_log_w_ttprime_expected_value,

        #Intializations functions
        init_params_genes,
        init_params_states,
        init_θ_hat_tk,
        init_ηtkj_prior,
        
        init_mk_hat!,
        init_λ_sq_vec!,
        init_σ_sq_k_vec!,
        init_v_sq_k_hat_vec!,
        init_ghk_hat_vec!,
        init_c_ttprime_hat_vec!,
        init_d_hat_vec!,
        init_st_hat_vec!,
        init_yjk_vec!,
        init_rtik_vec!,
        init_m_err_hat!,
        init_λ0_err_hat_vec!,
        init_a0_err_hat_vec!,
        init_b0_err_hat_vec!,
        initialize_VariationalInference_types!,
        low_memory_initialization,
        tidy_init_e_τ_μ_tikj_mat,
        tidy_init_e_log_τ_kj_mat,
        tidy_init_e_log_π_mat,
        tidy_init_rtik_mat,
        tidy_init_e_log_τj_err_mat,
        tidy_init_e_τ_μ_tij_err_mat,

        #Surragate Lower Bound optimzation functions
        #from viSurragateHdpUpdates.jls
        SurragateLowerBound_util,
        SurragateLowerBound_unconstrained_util,
        g_constrained!,
        g_unconstrained!,
        genterate_Delta_mk,

        #Closures for Surragate Lower Bound optimzation
        #from viSurragateHdpUpdates.jl
        g_constrained_closure!,
        g_unconstrained_closure!,
        SurragateLowerBound_closure,
        SurragateLowerBound_unconstrained_closure,

        #Summarizing and Sampling from the Approximate Postserior
        #from viPosteriorSummarizations.jl
        sample_z_post,
        sample_st_post,
        sample_π_post,
        vi_make_z_post_s,
        vi_make_st_post_s,
        vi_make_π_post_s,
        calc_π_post_mean,
        sample_normalgamma_μ_τ_post,
        calc_normalgamma_μ_τ_post_mean,
        sample_gamma_τ_post,
        calc_gamma_τ_post_mean,
        calc_gamma_τ_post_mean,

        Features,
        CellFeatures,
        NullDistributionFeatures,
        CellClusterLogLikelihoodFeatures,
        ClusterFeatures,
        GeneFeatures,
        ConditionFeatures,
        DataFeatures,
        ModelParameterFeatures,
        ElboFeatures,
        get_timeranges,
        _reset!,

        tidy_vi_make_z_post_s,
        tidy_vi_make_s_post_s,
        tidy_vi_make_π_post_s,
        tidy_calc_π_post_summarization,
        tidy_vi_make_normalgamma_μ_τ_post_s,
        tidy_calc_μ_τ_post_summarization,
        tidy_get_average_posterior_cluster_frequency,

        create_results_dict,
        get_function_name,
        run_variational_inference_dynamicHDP_benchmarks,
        run_variational_inference_dynamicHDP_vs12_benchmarks,
        run_variational_inference_dynamicHDP_vs18_benchmarks,
        run_variational_inference_dynamicHDP_vs25_benchmarks,
        run_variational_inference_dynamicHDP_vs25_fast_benchmarks,
        run_variational_inference_dynamicHDP_vs25_fast2_benchmarks,
        benchmark_init_mk_hat,
        benchmark_init_λ0k_hat_vec,
        benchmark_init_ρωk_hat_vec,
        benchmark_init_a_γ_hat_vec,
        benchmark_init_b_γ_hat_vec,
        benchmark_init_awt_hat_vec,
        benchmark_init_bwt_hat_vec,
        benchmark_init_a_αt_hat_vec,
        benchmark_init_b_αt_hat_vec,
        benchmark_init_c_ttprime_hat_vec,
        benchmark_init_θ_hat_vec,
        benchmark_init_rtik_vec,
        benchmark_init_v_tikj_vec,
        benchmark_init_m_err_hat,
        benchmark_init_λ0_err_hat_vec,
        benchmark_init_a0_err_hat_vec,
        benchmark_init_b0_err_hat_vec,
        benchmark_init_params_genes,
        benchmark_log_π_expected_value,
        benchmark_log_τ_k_expected_value,
        benchmark_τ_μ_expected_value,
        benchmark_log_τ_kj_expected_value,
        benchmark_log_τ_kj_error_expected_value,
        benchmark_τ_μ_error_expected_value12,
        benchmark_update_rtik,
        benchmark_update_rtik_vs12,
        benchmark_init_pip_kj_vec,
        benchmark_update_Ntk,
        benchmark_update_c_ttprime,
        benchmark_update_θ_hat,
        benchmark_update_Nk,
        benchmark_update_N,
        benchmark_errorNj12,
        benchmark_signalNkj,
        benchmark_update_x_hat_k,
        benchmark_update_x_hat_sq_k,
        benchmark_update_x_hat_error_vs_forloops,
        benchmark_update_x_hatk_signal_vs_forloops,
        benchmark_update_x_hat_sq_error_vs_forloops12,
        benchmark_update_x_hatk_sq_signal_vs_forloops,
        benchmark_update_λ0k_hat,
        benchmark_update_mk_hat_usingXhat,
        benchmark_update_a0k_hat_usingXhat,
        benchmark_update_b0k_hat_usingXhat,
        benchmark_update_a0_err_hat_usingXhat12,
        benchmark_update_λ0_err_hat,
        benchmark_update_m_err_hat_usingXhat,
        benchmark_update_b0_err_hat_usingXhat12,
        benchmark_update_λ0k_signal_hat,
        benchmark_update_a0k_signal_hat_usingXhat,
        benchmark_update_mk_signal_hat_usingXhat,
        benchmark_update_b0k_signal_hat_usingXhat,
        benchmark_update_αt,
        benchmark_update_awt_hat,
        benchmark_update_bwt_hat,
        benchmark_update_γ,
        benchmark_γ_expected_value,
        benchmark_update_Tαk,
        benchmark_update_rho_omega_hat,
        benchmark_update_v_tikj12,
        benchmark_update_rtik_vs18,
        benchmark_update_N_rpip18,
        benchmark_update_Nkj18,
        benchmark_update_a0k_hat_usingXhat18,
        benchmark_get_gene_PIP,
        benchmark_calc_DataElbo18,
        benchmark_calc_Hpip,
        benchmark_calc_DataElbo,
        benchmark_calc_DataElbo12,
        benchmark_calc_Hz,
        benchmark_calc_SurragateLowerBound_unconstrained,
        benchmark_calc_Hs,
        benchmark_calc_wAllocationsLowerBound,
        benchmark_calc_GammaElbo,
        benchmark_calc_alphaElbo,
        benchmark_calc_ImportanceElbo,
        benchmark_calc_Hv,
        benchmark_log_π_expected_value25,
        benchmark_log_τ_k_expected_value25,
        benchmark_τ_μ_expected_value25,
        benchmark_log_τ_kj_expected_value25,
        benchmark_update_rtik_vs25,
        benchmark_update_x_hat_k25,
        benchmark_update_x_hat_sq_k25,
        benchmark_update_N_rpip25,
        benchmark_update_Nkj25,
        benchmark_update_a0k_hat_usingXhat25,
        benchmark_get_gene_PIP25,
        benchmark_calc_DataElbo25,
        benchmark_log_π_expected_value25_fast,
        benchmark_log_τ_k_expected_value25_fast,
        benchmark_τ_μ_expected_value25_fast,
        benchmark_log_τ_kj_expected_value25_fast,
        benchmark_update_rtik_vs25_fast,
        benchmark_update_rtik_vs25_fast2,
        benchmark_update_x_hat_k25_fast,
        benchmark_update_x_hat_sq_k25_fast,
        benchmark_update_N_rpip25_fast,
        benchmark_update_Nkj25_fast,
        benchmark_update_a0k_hat_usingXhat25_fast,
        benchmark_get_gene_PIP25_fast,
        benchmark_get_gene_PIP25_fast2,
        benchmark_calc_DataElbo25_fast,

        
        generate_a0k_testing,
        generate_b0k_testing,
        generate_v_sq_k_testing,
        generate_σ_sq_k_testing,
        generate_λ0k_testing,
        generate_λj_testing,
        generate_mk_testing,
        generate_a0_err_testing,
        generate_b0_err_testing,
        generate_λ0_err_testing,
        generate_m_err_testing,
        generate_rhok_testing,
        generate_omegak_testing,
        generate_gk_testing,
        generate_hk_testing,
        generate_a_γ_testing,
        generate_b_γ_testing,
        generate_awt_testing,
        generate_bwt_testing,
        generate_a_αt_testing,
        generate_b_αt_testing,
        generate_st_testing,
        generate_c_ttprime_testing,
        generate_θ_hat_testing,
        generate_d_hat_testing,
        generate_rtik_testing,
        generate_v_tikj_testing,
        generate_pip_kj_imp_weights_testing,
        generate_y_kj_imp_weights_testing,
        generate_η_kj_prior_testing,
        generate_x_testing,
        generate_e_log_π_testing,
        generate_e_log_τ_testing,
        generate_e_log_τkj_testing,
        generate_e_log_τkj_err_testing,
        generate_e_τ_μ_testing,
        generate_e_τ_μ_tikj_testing,
        generate_e_τ_0j_err_testing,
        generate_e_τ_0_err_testing,
        generate_Ntk_testing,
        generate_N_signal_testing,
        generate_N_error_testing,
        generate_Nj_error_testing,
        generate_Nkj_signal_testing,
        generate_Nk_testing,
        generate_x_hat_k_testing,
        generate_x_hat_sq_k_testing,
        generate_x_hat_error_testing,
        generate_x_hatk_signal_testing,
        generate_x_hat_sq_error_testing,
        generate_x_hatk_sq_signal_testing,
        generate_e_γ_testing,
        generate_Tαk_testing,
        generate_Tk_testing,
        generate_hyperparamters_testing,
        generate_init_vec_testing,
        generate_hyperparamters_vs12_testing,
        generate_init_vec_vs12_testing,
        generate_hyperparamters_testing18,
        generate_hyperparamters_testing25,
        generate_hyperparamters_testing,
        generate_init_vec_testing25,
        generate_init_vec_testing18,
        generate_Glog_testing,
        generate_logpi_testing,
        

        f0,
        f12,
        f14,
        f15,
        f16,
        f17,
        f18,
        f19,
        f20,
        f21,
        f22,
        f23,
        f24,
        f25,
        f25_fast3series,
        f25_fast3seriesCH,
        f25_fast3seriesCH_kfolds,
        select_and_run_optimization_procedure,
        setup_avail_models,
        setup_avail_opt_functions,
        setup_avail_model_names,
        setup_avail_opt_functions_names,
        setup_model_indexing,
        setup_dataset_dict,
        setup_experiment_tag,

        #Testing Revise.jl
        print_helloWorld
        

#TODO Replatce includet with include?
include(curr_dir*src_dir*"viAlgMetrics.jl")
include(curr_dir*src_dir*"viBenchmarkingAndProfiling.jl")
include(curr_dir*src_dir*"viDevelopment_ModelVersions.jl")
include(curr_dir*src_dir*"viCoordinateAscent.jl")
include(curr_dir*src_dir*"viCustomType.jl")
include(curr_dir*src_dir*"viElboCalculations.jl")
include(curr_dir*src_dir*"viHyperparameterTuning.jl")
include(curr_dir*src_dir*"viExpectations.jl")
include(curr_dir*src_dir*"viInitializations.jl")
include(curr_dir*src_dir*"viSurragateHdpUpdates.jl")
include(curr_dir*src_dir*"viVariationalUpdates.jl")
include(curr_dir*src_dir*"viUnitTests.jl")
include(curr_dir*src_dir*"viPosteriorSummarizations.jl")
include(curr_dir*src_dir*"test_viFunctions.jl")


end 

